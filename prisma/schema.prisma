// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @map("_id")
  firstName String
  games     Game[]

  @@map("users")
}

model Game {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  author      User   @relation(fields: [authorId], references: [id])
  authorId    Int
  version     String @default("0.0.1")
  description String @default("A thrilling text-based adventure game.")
  health      Int
  stamina     Int
  attack      Int
  defense     Int
  rooms       Room[]
  inventory   Item[]
  entryRoomId String @db.ObjectId

  @@map("games")
}

model Room {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  exits       Exit[]
  items       Item[]   @relation(fields: [itemIds], references: [id])
  itemIds     String[] @db.ObjectId
  game        Game     @relation(fields: [gameId], references: [id])
  gameId      String   @db.ObjectId

  @@map("rooms")
}

model Exit {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  direction Direction
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    String    @db.ObjectId
  targetId  String    @db.ObjectId

  @@map("exits")
}

enum Direction {
  north
  northeast
  east
  southeast
  south
  southwest
  west
  northwest

  @@map("direction")
}

model Item {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  usable      Boolean
  effects     ItemEffect[]
  fixed       Boolean      @default(false)
  pushable    Boolean      @default(false)
  pickable    Boolean      @default(true)
  hidden      Boolean      @default(false)
  rooms       Room[]       @relation(fields: [roomIds], references: [id])
  roomIds     String[]     @db.ObjectId
  game        Game         @relation(fields: [gameId], references: [id])
  gameId      String       @db.ObjectId

  @@map("items")
}

model ItemEffect {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  description String
  statChanges Json
  item        Item   @relation(fields: [itemId], references: [id])
  itemId      String @db.ObjectId

  @@map("item_effects")
}
